//  ############################################################################
//
//                          PANELS OPERATIONS
//
//  ############################################################################
void            OpenFilesListPlus::Panels::p0_reset         ()
{
    PanelArray::iterator        it;
    OFLPPanel               *   panel   =   NULL;
    //  ........................................................................
    GWR_INF("%s", wxS("OFLP::Panels::p0_panels_reset()"));
    //  ........................................................................
    // delete all panels
    for ( it = a_panels_array.begin() ; it != a_panels_array.end() ; it++ )
    {
        panel = *(it);

        if ( ! panel->is_bulk() )
        {
            dw_MainSizer->Detach(panel);
            delete panel;
        }
    }

    a_BulkPanel->editors_del();

    a_panels_array.Clear();
    a_panels_array.Add( a_BulkPanel );

    dw_MainSizer->Layout();
}

void            OpenFilesListPlus::Panels::p0_resize        ()
{
    PanelArray::iterator        it;
    OFLPPanel               *   panel   =   NULL;
    int                         s       =   0;
    int                         p       =   0;
    int                         pmin    =   5;                                  //  minimum proportion for a panel
    int                         pdist   =   100;                                //  remaining proportion to distribute to panels
    //  ........................................................................
    earlgreycb::Log_function_enter(wxS("OFLP::Panels::p0_resize()"));
    //  ........................................................................
    //  compute the total #Â of opened editors in the panels
    for ( it = a_panels_array.begin() ; it != a_panels_array.end() ; it++ )
    {
        panel = *(it);
        s       =   s       +   panel->get_editors()->size();
        pdist   =   pdist   -   pmin;
    }

    //D GWR_TKI("              ...pdist[%i]", pdist);

    for ( it = a_panels_array.begin() ; it != a_panels_array.end() ; it++ )
    {
        panel = *(it);

        //  after each anel has taken its pmin, it remains some : distribute it
        //  following the # of editors per panel
        if ( pdist > 0 )
        {
            p   =   pdist * panel->get_editors()->size();
            p   =   p / s;
            p   =   p   +   pmin;
        }
        //  after each anel has taken its pmin, it does not remain proportion ;
        //  do a classical allocation ( panels will have vertical scrollbars ! )
        else
        {
            p   =   100 * panel->get_editors()->size();
            p   =   p / s;
        }
        dw_MainSizer->GetItem( panel )->SetProportion( p );

        GWR_TKI("              ...[%03i] for panel[%s]", p, panel->get_title().wc_str());

    }

    dw_MainSizer->Layout();

    earlgreycb::Log_function_exit();
}

void            OpenFilesListPlus::Panels::p0_editors_mov   (OFLPPanel* _dst, OFLPPanel* _src)
{
    EditorArray const   *   array   = _src->get_editors();
    //  ........................................................................
    for ( EditorArray::const_iterator it = array->begin() ; it != array->end() ; it++)
    {
        _dst->editor_add( *it );
    }
    _src->editors_del();
}

OFLPPanel*      OpenFilesListPlus::Panels::get_by_name      (wxString const & _panel_name)
{
    for ( PanelArray::iterator it = a_panels_array.begin() ; it != a_panels_array.end() ; it++ )
    {
        OFLPPanel* panel = *(it);

        if ( ! panel->get_title().Cmp( _panel_name ) )
        {
            return ( *it);
        }
    }

    return NULL;
}

void            OpenFilesListPlus::Panels::p0_editor_mov    (OFLPPanel* _dst, OFLPPanel* _src, EditorBase* _edb)
{
    _src->editor_del(_edb);
    _dst->editor_add(_edb);
}
//  ############################################################################
int             OpenFilesListPlus::Panels::get_visual_index     (OFLPPanel* _panel)
{
    //  - wxWindowList is not re-ordered regarding layout changes, so use wxSizer
    //  - wxSizer 2.8.12 does not provide GetItemCount(), so use GetChildren()
    //  ........................................................................
    wxSizerItemList                 list;
    wxSizerItemList::iterator       it;
    wxWindow                    *   win     =   NULL;
    int                             index   =   0;
    //  ........................................................................
    #ifdef  GWR_OFLP_SANITY_CHECKS                                              //  _GWR_SANITY_CHECK_
    if ( a_panels_array.Index(_panel) == wxNOT_FOUND )
        return wxNOT_FOUND;
    #endif

    list = dw_MainSizer->GetChildren();

    for ( it = list.begin() ; it != list.end() ; it++ )
    {
        win =   (*it)->GetWindow();

        //D GWR_INF("OFLPlugin::GetPanelVisualIndex(%p):ix[%02i] win[%p]",
        //D   _panel, index, win );

        if ( win == _panel )
            return index;

        index   =   index   +   1;
    }

    return wxNOT_FOUND;
}

OFLPPanel*      OpenFilesListPlus::Panels::p0_add               (wxString _title, bool _bulk)
{
    OFLPPanel   *   panel   =   NULL;
    //  ........................................................................
    GWR_INF("%s", wxS("OFLP::Panels::p0_add()"));
    //  ........................................................................
    panel   =   _bulk                                                           ?
                new OpenFilesListPlusPanelBulk  ( OpenFilesListPlus::Instance(), dw_MainPanel, _title )  :
                new OpenFilesListPlusPanel      ( OpenFilesListPlus::Instance(), dw_MainPanel, _title )  ;

    dw_MainSizer->Add(panel, 100, wxEXPAND, 0);
    dw_MainSizer->Layout();

    a_panels_array.Add( panel );

    wxSizerItemList il = dw_MainSizer->GetChildren();

    return panel;
}

void            OpenFilesListPlus::Panels::p0_move_up           (OFLPPanel* _panel)
{
    size_t  prev_panel_ix   =   0;
    int     pix             =   get_visual_index(_panel);
    //  ........................................................................
    GWR_INF("OFLP::Panels::p0_move_up():ix[%i]", pix);
    //  ........................................................................
    #ifdef  GWR_OFLP_SANITY_CHECKS                                              //  _GWR_SANITY_CHECK_
    if ( pix == wxNOT_FOUND )
        return;

    if ( pix <= 1 )
        return;
    #endif

    prev_panel_ix = static_cast< size_t >( pix - 1 );

    dw_MainSizer->Detach(_panel);
    dw_MainSizer->Insert( prev_panel_ix, _panel, 1, wxEXPAND, 0);
    dw_MainSizer->Layout();
}

void            OpenFilesListPlus::Panels::p0_move_dn           (OFLPPanel* _panel)
{
    size_t  next_panel_ix   =   0;
    int     pix             =   get_visual_index(_panel);
    //  ........................................................................
    GWR_INF("OFLP::Panels::p0_move_dn():ix[%i]", pix);
    //  ........................................................................
    #ifdef  GWR_OFLP_SANITY_CHECKS                                              //  _GWR_SANITY_CHECK_
    if ( pix == wxNOT_FOUND )
        return;
    #endif
    if ( ( 1 + pix ) == a_panels_array.size() )
    {
        GWR_INF("%s", wxS("              ...already the last"));
        return;
    }

    next_panel_ix = static_cast< size_t >( pix + 1 );

    dw_MainSizer->Detach(_panel);
    dw_MainSizer->Insert( next_panel_ix, _panel, 1, wxEXPAND, 0);
    dw_MainSizer->Layout();
}

void            OpenFilesListPlus::Panels::p0_sub               (OFLPPanel* _panel)
{
    p0_editors_mov(a_BulkPanel, _panel);

    dw_MainSizer->Detach(_panel);
    dw_MainSizer->Layout();

    a_panels_array.Remove(_panel);

    delete _panel;
}

OFLPPanel*      OpenFilesListPlus::Panels::find                 (EditorBase* _editor )
{
    PanelArray::iterator        it;
    OFLPPanel               *   panel   =   NULL;
    //  ........................................................................
    //D GWR_INF("%s", wxS("OFLP::Panels::find(Editor*)"));
    //  ........................................................................
    // loop all panels
    for ( it = a_panels_array.begin() ; it != a_panels_array.end() ; it++ )
    {
        panel = *(it);
        if ( panel->editor_has(_editor) )
            return panel;
    }
    return NULL;
}

OFLPPanel*      OpenFilesListPlus::Panels::get_from_absolute_filepath   (wxString& _absolute_filepath)
{
    PanelArray::const_iterator      it;
    OFLPPanel                   *   panel   =   NULL;
    //  ........................................................................
    GWR_INF("OFLP::Panels::get(wxString&):[%s] panels[%i]", _absolute_filepath.wc_str(), a_panels_array.size());
    //  ........................................................................
    // loop all panels
    for ( it = a_panels_array.begin() ; it != a_panels_array.end() ; it++ )
    {
        panel = *it;

        if ( panel->editor_from_absolute_filepath(_absolute_filepath) )
        {
            GWR_INF("              ...panel[%s]", panel->get_title().wc_str());
            return panel;
        }
    }
    return NULL;
}

void            OpenFilesListPlus::Panels::p0_unselect_except   (OFLPPanel* _panel)
{
    earlgreycb::Log_function_mark( wxS("OFLP::Panels::p0_unselect_except()"));
    //  ........................................................................
    GWR_TKI("              *panel[%p]", _panel);
    for ( PanelArray::iterator it = a_panels_array.begin() ; it != a_panels_array.end() ; it++ )
    {
        if ( (*it) != _panel )
        {
            GWR_TKI("              -panel[%p]", *it);
            (*it)->editors_deselect();
        }
        else
        {
            GWR_TKI("              =panel[%p]", *it);
        }
    }
}
